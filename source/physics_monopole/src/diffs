29c29
< // $Id: G4MonopoleTransportation.cc 111448 2018-08-10 07:54:47Z gcosmo $
---
> // $Id: G4MonopoleTransportation.cc 84606 2014-10-17 07:50:04Z gcosmo $
56,58d55
< #include "G4RunManager.hh"
< #include "DetectorConstruction.hh"
< 
80,81c77
<     fpSafetyHelper(0),
<     noCalls(0)
---
>     fpSafetyHelper(0)
88,101c84
< 
< #ifdef G4MULTITHREADED
<   // Do not finalize the G4MonopoleTransportation class 
<   if (G4Threading::IsMasterThread())
<     {
<       return;
<     }
< #endif
< 
<   const DetectorConstruction* detector = 
<     static_cast<const DetectorConstruction*>
<     (G4RunManager::GetRunManager()->GetUserDetectorConstruction());
< 
<   fMagSetup = detector->GetMonopoleFieldSetup();
---
>   fMagSetup = G4MonopoleFieldSetup::GetMonopoleFieldSetup();
103,104c86,88
<   G4TransportationManager* transportMgr = 
<     G4TransportationManager::GetTransportationManager(); 
---
>   G4TransportationManager* transportMgr ; 
> 
>   transportMgr = G4TransportationManager::GetTransportationManager() ; 
107a92,93
>   // fGlobalFieldMgr = transportMgr->GetFieldManager() ;
> 
109d94
<   fpSafetyHelper =   transportMgr->GetSafetyHelper();  
111c96
< // New 
---
>   fpSafetyHelper =   transportMgr->GetSafetyHelper();  // New 
118c103,105
<   fCurrentTouchableHandle = nullptr; 
---
> 
>   static G4TouchableHandle nullTouchableHandle;  // Points to (G4VTouchable*) 0
>   fCurrentTouchableHandle = nullTouchableHandle; 
131,134c118,119
<     G4cout << "   Sum of energy of loopers killed: " 
<            <<  fSumEnergyKilled << G4endl;
<     G4cout << "   Max energy of loopers killed: " 
<            <<  fMaxEnergyKilled << G4endl;
---
>     G4cout << "   Sum of energy of loopers killed: " <<  fSumEnergyKilled << G4endl;
>     G4cout << "   Max energy of loopers killed: " <<  fMaxEnergyKilled << G4endl;
291c276
<      G4ChargeState chargeState(particleElectricCharge,  // The charge can change
---
>      G4ChargeState chargeState(particleElectricCharge,  // The charge can change (dynamic)
293,294c278,279
<                                0,   //  Magnetic moment:  
<                                0,   //  Electric Dipole moment 
---
>                                0,   //  Magnetic moment:  pParticleDef->GetMagneticMoment(),
>                                0,   //  Electric Dipole moment - not in Particle Definition 
297,304c282,290
<      G4EquationOfMotion* equationOfMotion = fFieldPropagator->
<        GetChordFinder()->GetIntegrationDriver()->GetEquationOfMotion();
< 
<      equationOfMotion->SetChargeMomentumMass( chargeState, 
<                                               momentumMagnitude, 
<                                               restMass );  
<      // SetChargeMomentumMass now passes both the electric and magnetic 
<      // charge in chargeState
---
>      G4EquationOfMotion* equationOfMotion = 
>      (fFieldPropagator->GetChordFinder()->GetIntegrationDriver()->GetStepper())
>      ->GetEquationOfMotion();
> 
>      equationOfMotion
>        ->SetChargeMomentumMass( chargeState,       //  Was particleMagneticCharge - in Mev/c
>                                 momentumMagnitude, //  Was particleElectricCharge 
>                                 restMass ) ;  
>      // SetChargeMomentumMass now passes both the electric and magnetic charge - in chargeState
376c362
<       //G4cout  << "  Avoiding call to ComputeSafety : charge = 0.0 " << G4endl;
---
>       //    G4cout  << "  Avoiding call to ComputeSafety : charge = 0.0 " << G4endl;
385c371
<          fpSafetyHelper->SetCurrentSafety(currentSafety, fTransportEndPosition);
---
>          fpSafetyHelper->SetCurrentSafety( currentSafety, fTransportEndPosition);
394,397c380,382
<          G4cout << "***G4MonopoleTransportation::AlongStepGPIL ** " << G4endl;
<          G4cout << "  Called Navigator->ComputeSafety at " 
<                 << fTransportEndPosition
<                 << "    and it returned safety= " << endSafety << G4endl;
---
>          G4cout << "***G4MonopoleTransportation::AlongStepGPIL ** " << G4endl  ;
>          G4cout << "  Called Navigator->ComputeSafety at " << fTransportEndPosition
>                 << "    and it returned safety= " << endSafety << G4endl ; 
399c384
<                 << "   to obtain pseudo-safety= " << currentSafety << G4endl; 
---
>                 << "   to obtain pseudo-safety= " << currentSafety << G4endl ; 
417,418c402,403
< G4VParticleChange* G4MonopoleTransportation::AlongStepDoIt( 
<                    const G4Track& track, const G4Step&  stepData )
---
> G4VParticleChange* G4MonopoleTransportation::AlongStepDoIt( const G4Track& track,
>                                                     const G4Step&  stepData )
420c405,406
<   const G4ParticleDefinition* fOpticalPhoton =
---
>   static G4int noCalls=0;
>   static const G4ParticleDefinition* fOpticalPhoton =
423c409
<   ++noCalls;
---
>   noCalls++;
438a425,426
>      // G4double endTime   = fCandidateEndGlobalTime;
>      // G4double delta_time = endTime - startTime;
444c432
<      // The time was not integrated .. make the best estimate possible
---
>       // The time was not integrated .. make the best estimate possible
463c451
<                             * ( 1.0 / initialVelocity + 1.0 / finalVelocity );
---
>                             * ( 1.0 / initialVelocity + 1.0 / finalVelocity ) ;
470a459,460
> 
>         G4cout << "initialVelocity > 0.0 gives deltaTime " << deltaTime << G4endl;
489,490c479,480
<   G4double  restMass       = track.GetDynamicParticle()->GetMass();
<   G4double deltaProperTime = deltaTime*( restMass/track.GetTotalEnergy() );
---
>   G4double  restMass       = track.GetDynamicParticle()->GetMass() ;
>   G4double deltaProperTime = deltaTime*( restMass/track.GetTotalEnergy() ) ;
492c482,483
<   fParticleChange.ProposeProperTime(track.GetProperTime() + deltaProperTime);
---
>   fParticleChange.ProposeProperTime(track.GetProperTime() + deltaProperTime) ;
>   //fParticleChange. ProposeTrueStepLength( track.GetStepLength() ) ;
516,517c507,508
<           G4cout << " G4MonopoleTransportation is killing track "
<                  << "that is looping or stuck " << G4endl
---
>           G4cout << " G4MonopoleTransportation is killing track that is looping or stuck "
>                  << G4endl
531,532c522
<           G4cout << "   G4MonopoleTransportation::AlongStepDoIt(): "
<                  << "Particle looping - "
---
>           G4cout << "   G4MonopoleTransportation::AlongStepDoIt(): Particle looping -  "
624a615
>                                                                                        
698,699c689
<        // including safety values 
<        // in case of overlaps and to wipe for first track).
---
>        //  including safety values (in case of overlaps and to wipe for first track).
706c696
<   G4FieldManagerStore* fieldMgrStore= G4FieldManagerStore::GetInstance();
---
>   static G4FieldManagerStore* fieldMgrStore= G4FieldManagerStore::GetInstance();
