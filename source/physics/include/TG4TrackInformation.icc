// $Id$
// Category: event

// inline operators

extern G4Allocator<TG4TrackInformation> gAliTrackInfoAllocator;

inline void* TG4TrackInformation::operator new(size_t) 
{
// Override "new" for "G4Allocator".
// ---

  void *trackInfo;
  trackInfo = (void *) gAliTrackInfoAllocator.MallocSingle();
  return trackInfo;
}

inline void TG4TrackInformation::operator delete(void *trackInfo)
{ 
// Override "delete" for "G4Allocator".
// ---

  gAliTrackInfoAllocator.FreeSingle((TG4TrackInformation *) trackInfo);
}

// inline methods

inline void TG4TrackInformation::SetTrackParticleID(G4int trackParticleID) { 
  /// Set track particle ID.= the index of track particle in VMC stack
  fTrackParticleID = trackParticleID; 
}

inline void TG4TrackInformation::SetParentParticleID(G4int parentParticleID) { 
  /// Set parent particle ID = the index of parent particle in VMC stack
  fParentParticleID = parentParticleID; 
}

inline void TG4TrackInformation::SetIsUserTrack(G4bool isUserTrack) { 
  /// Set info that the track was poped from the VMC stack
  fIsUserTrack = isUserTrack; 
}

inline G4int TG4TrackInformation::GetTrackParticleID() const { 
  /// Return track particle ID.= the index of track particle in VMC stack
  return fTrackParticleID; 
}

inline G4int TG4TrackInformation::GetParentParticleID() const { 
  /// Return parent particle ID = the index of parent particle in VMC stack
  return fParentParticleID; 
}

inline G4bool TG4TrackInformation::IsUserTrack() const { 
  /// Return the info if the track was poped from the VMC stack
  return fIsUserTrack; 
}
